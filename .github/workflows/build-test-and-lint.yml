name: CI suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.SSH_KEY }}'
          cargo +nightly check --workspace --all-targets --all-features --verbose

      - name: Build `no-std`
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.SSH_KEY }}'
          cargo +nightly check -p pallet-ismp --no-default-features --target=wasm32-unknown-unknown --verbose

      - name: Run tests
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.SSH_KEY }}'
          cargo +nightly  test --all-features --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Check format
        run: cargo +nightly fmt --all --check
